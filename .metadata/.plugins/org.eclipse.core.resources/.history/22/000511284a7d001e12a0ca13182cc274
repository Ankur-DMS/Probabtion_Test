package com.dms;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;

public class Connection {

	String dbUrl = "jdbc:postgresql://localhost:5433/ManageItems";
    String dbUsername = "postgres";
    String dbPassword = "rtsAdmin" ;
    
    public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    
    CategoryManager categoryManager = null; // Initialize CategoryManager
    ItemManager itemManager = null; // Initialize ItemManager
    while (true) {
        System.out.println("1. Add a new category");
        System.out.println("2. List all categories");
        System.out.println("3. Add a new item and associate it with a category");
        System.out.println("4. List all items in a specific category");
        System.out.println("5. Calculate statistics");
        System.out.println("6. Exit");
        System.out.print("Enter your choice: ");

        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        switch (choice) {
        case 1:
            System.out.print("Enter category name: ");
            String categoryName = scanner.nextLine();
            Category newCategory = new Category(choice, categoryName);

            try {
                categoryManager.addCategory(newCategory);
                System.out.println("Category added successfully.");
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Error adding category.");
            }
            break;
            case 2:
                try {
                    List<Category> categories = categoryManager.listAllCategories();
                    for (Category category : categories) {
                        System.out.println("Category ID: " + category.getId() + ", Name: " + category.getName());
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                    System.out.println("Error listing categories.");
                }
                break;
        case 3:
            // Call ItemManager to add a new item and associate it with a category
            break;
        case 4:
            // Call ItemManager to list all items in a specific category
            break;
        case 5:
            //  Calling Statistics to calculate and display statistics
            break;
        case 6:
            System.out.println("Thank you have a Good Day");
            System.exit(0);
            break;
        default:
            System.out.println("Invalid choice. Please try again.");
    }

       

}
}
	public PreparedStatement prepareStatement(String query) {
		// TODO Auto-generated method stub
		return null;
	}
    
}